{"version":3,"sources":["components/square/Square.js","components/board/Board.js","game-utils/game-utils.js","components/moves-history/MovesHistory.js","Game.js","index.js"],"names":["square_Square","props","react_default","a","createElement","className","onClick","value","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rows","generateGrid","size","i","cells","j","push","_this2","map","rowIndex","key","cellNumber","cellIndex","num","squares","onSquareClick","Component","DEFAULT_BOARD_SIZE","calculateWinner","arguments","length","undefined","Error","lines","_lines$i","slicedToArray","b","c","getHistoryButtonName","history","step","move","_getTurnLocation","prev","current","boardSize","index","findIndex","v","col","row","Math","floor","getTurnLocation","concat","moves_history_MovesHistory","currentStep","onJumpTo","buttonName","buttonClass","join","Game","handleJumpTo","setState","xIsNext","Array","fill","slice","prevState","_this$state","winner","status","Board_Board","handleSquareClick","ReactDOM","render","Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.70584ee1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Square.css';\r\n\r\nexport default props => {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport './Board.css';\r\n\r\nimport Square from '../square';\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rows: this.generateGrid(props.size)\r\n    };\r\n  }\r\n\r\n  generateGrid(size) {\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      const cells = [];\r\n\r\n      for (let j = 0; j < size; j++) {\r\n        cells.push(i * size + j);\r\n      }\r\n\r\n      rows.push(cells);\r\n    }\r\n\r\n    return rows;\r\n  }\r\n\r\n  render() {\r\n    const fetSquareValue = num => this.props.squares[num];\r\n    const onSquareClick = num => this.props.onSquareClick(num);\r\n\r\n    return (\r\n      <div className=\"board\">\r\n        {this.state.rows.map((cells, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\">\r\n            {cells.map((cellNumber, cellIndex) => (\r\n              <Square\r\n                key={cellIndex}\r\n                value={fetSquareValue(cellNumber)}\r\n                onClick={() => onSquareClick(cellNumber)}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const DEFAULT_BOARD_SIZE = 3;\r\n\r\nexport function getTurnLocation(prev, current, boardSize = DEFAULT_BOARD_SIZE) {\r\n  const index = current.findIndex((v, i) => v !== prev[i]);\r\n\r\n  return {\r\n    col: index % boardSize,\r\n    row: Math.floor(index / boardSize)\r\n  };\r\n}\r\n\r\nexport function calculateWinner(squares, boardSize = DEFAULT_BOARD_SIZE) {\r\n  if (boardSize !== DEFAULT_BOARD_SIZE) {\r\n    throw new Error('Board sizes higher then 3 is not supported yet!');\r\n  }\r\n\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","import React from 'react';\r\n\r\nimport './MovesHistory.css';\r\n\r\nimport { getTurnLocation } from '../../game-utils';\r\n\r\nconst getHistoryButtonName = (history, step, move) => {\r\n  if (move === 0) {\r\n    return 'Go to game start';\r\n  }\r\n\r\n  const prevStep = history[move - 1];\r\n\r\n  const { col, row } = getTurnLocation(\r\n    prevStep.squares,\r\n    step.squares,\r\n    step.boardSize\r\n  );\r\n\r\n  return `Go to move #${move} (${col + 1}, ${row + 1})`;\r\n};\r\n\r\nexport default props => {\r\n  const { currentStep, history, onJumpTo } = props;\r\n\r\n  return (\r\n    <ol className=\"move-history\">\r\n      {history.map((step, move) => {\r\n        const buttonName = getHistoryButtonName(history, step, move);\r\n\r\n        const buttonClass = [\r\n          'history-btn',\r\n          currentStep === move ? 'active' : ''\r\n        ].join(' ');\r\n\r\n        return (\r\n          <li key={move}>\r\n            <button className={buttonClass} onClick={() => onJumpTo(move)}>\r\n              {buttonName}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport './Game.css';\r\n\r\nimport { Board, MovesHistory } from './components';\r\nimport { calculateWinner, DEFAULT_BOARD_SIZE } from './game-utils';\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const boardSize = DEFAULT_BOARD_SIZE;\r\n\r\n    this.state = {\r\n      xIsNext: true,\r\n      currentStep: 0,\r\n      boardSize: boardSize,\r\n      history: [\r\n        {\r\n          boardSize: boardSize,\r\n          squares: Array(boardSize * boardSize).fill(null)\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  handleSquareClick(i) {\r\n    const history = this.state.history.slice(0, this.state.currentStep + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const boardSize = this.state.boardSize;\r\n\r\n    if (calculateWinner(squares, boardSize) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\r\n    this.setState(prevState => ({\r\n      xIsNext: !prevState.xIsNext,\r\n      currentStep: history.length,\r\n      history: history.concat([\r\n        {\r\n          squares,\r\n          boardSize\r\n        }\r\n      ])\r\n    }));\r\n  }\r\n\r\n  handleJumpTo = step => {\r\n    this.setState({\r\n      currentStep: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { history, boardSize } = this.state;\r\n    const current = history[this.state.currentStep];\r\n    const winner = calculateWinner(current.squares, boardSize);\r\n\r\n    const status = !!winner\r\n      ? `Winner: ${winner}`\r\n      : `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <div className=\"game-title\">Noughts and Crosses (React)</div>\r\n          <Board\r\n            squares={current.squares}\r\n            size={boardSize}\r\n            onSquareClick={num => this.handleSquareClick(num)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"game-status\">{status}</div>\r\n          <MovesHistory\r\n            history={history}\r\n            onJumpTo={this.handleJumpTo}\r\n            currentStep={this.state.currentStep}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport Game from './Game';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}